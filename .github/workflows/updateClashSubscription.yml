name: 下载ClashNodes订阅

on:
  workflow_dispatch:
  schedule:
    - cron: '30 17 * * *'

jobs:
  download_nodes:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Set Beijing Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: Get current date
        id: date
        run: |
          NOW=$(date +%Y%m%d)
          echo "NOW=$NOW" >> $GITHUB_OUTPUT

      - name: Download files
        run: |
          TODAY="${{ steps.date.outputs.NOW }}"
          BASE_URL="https://node.freeclashnode.com/uploads/$(date +%Y)/$(date +%m)/"

          mkdir -p "Clash"
          mkdir -p "V2Ray"
          mkdir -p "Sing-Box"

          echo "Starting download of Clash and V2Ray files..."
          for i in {0..4}; do
            CLASH_FILE="Clash/${i}.yaml"
            echo "Downloading Clash URL: ${BASE_URL}${i}-$TODAY.yaml to ${CLASH_FILE}"
            curl -o "${CLASH_FILE}" "${BASE_URL}${i}-$TODAY.yaml"
            CLASH_FILE_SIZE=$(stat -c %s "${CLASH_FILE}" 2>/dev/null || echo 0)
            if [ "$CLASH_FILE_SIZE" -lt 10 ]; then
              echo "Warning: ${CLASH_FILE} file size (${CLASH_FILE_SIZE} bytes) is download failed, deleting."
              rm -f "${CLASH_FILE}"
            fi
            sleep 1s

            V2RAY_FILE="V2Ray/${i}.txt"
            echo "Downloading V2Ray URL: ${BASE_URL}${i}-$TODAY.txt to ${V2RAY_FILE}"
            curl -o "${V2RAY_FILE}" "${BASE_URL}${i}-$TODAY.txt"
            V2RAY_FILE_SIZE=$(stat -c %s "${V2RAY_FILE}" 2>/dev/null || echo 0)
            if [ "$V2RAY_FILE_SIZE" -lt 10 ]; then
              echo "Warning: ${V2RAY_FILE} file size (${V2RAY_FILE_SIZE} bytes) is download failed, deleting."
              rm -f "${V2RAY_FILE}"
            fi
            sleep 1s
          done

          SINGBOX_FILE="Sing-Box/Sing-Box.json"
          echo "Downloading Sing-Box URL: ${BASE_URL}$TODAY.json to ${SINGBOX_FILE}"
          curl -o "${SINGBOX_FILE}" "${BASE_URL}$TODAY.json"
          SINGBOX_FILE_SIZE=$(stat -c %s "${SINGBOX_FILE}" 2>/dev/null || echo 0)
          if [ "$SINGBOX_FILE_SIZE" -lt 10 ]; then
            echo "Warning: ${SINGBOX_FILE} file size (${SINGBOX_FILE_SIZE} bytes) is download failed, deleting."
            rm -f "${SINGBOX_FILE}"
          fi
          echo "All file download attempts completed."

      - name: Replace content and decode V2Ray
        run: |
         TODAY=$(date +%Y%m%d)
         clearAD() {
         local file="$1"
         if [ -f "$file" ]; then
           sed -i 's/(\(.*\))//g' "$file"
           sed -i 's/|@stairnode//g' "$file"
           sed -i -E 's/(name: )([0-9]+|[零一二三四五六七八九十]*)元.*机场[:：].*\..*(, server:)/\1未知,\3/g' "$file"
           sed -i -E 's/([0-9]+|[零一二三四五六七八九十]*)元.*机场[:：].*\..*/未知/g' "$file"
           echo "$(basename "$file") 处理广告完成（无残留，推荐）"
         fi
         }
         for i in {0..4}; do
            if [ -f "Clash/${i}.yaml" ]; then
               clearAD "Clash/${i}.yaml"
            fi

            if [ -f "V2Ray/${i}.txt" ]; then
              LINE_COUNT=$(wc -l < "V2Ray/${i}.txt")
              if [ "$LINE_COUNT" -eq 0 ]; then
                DECODED=$(cat "V2Ray/${i}.txt" | base64 -d)
                echo "$DECODED" > "V2Ray/${i}.txt"
                sed -i 's/(%28.*%29)//g' "V2Ray/${i}.txt"
                echo "${i}.txt 处理广告完成（有残留）"
              else
                echo "${i}.txt 处理广告失败"
              fi
            fi
          done
          echo "Sing-Box.json 无广告（推荐）"

      - name: List modified files
        run: |
          ls -R ./

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: ${{ github.actor }}
          commit_user_email: ${{ github.actor }}@users.noreply.github.com
          commit_message: "更新免费节点并去除广告 (日期: ${{ steps.date.outputs.NOW }})"
          push_options: '--force'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
